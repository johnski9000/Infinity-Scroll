import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {useEffect, useState} from "react"
import InfiniteScroll from 'react-infinite-scroll-component';

export default function Home({imageArray}) {
  const [posts, setPosts] = useState(imageArray);
  const [hasMore, setHasMore] = useState(true);

  const renderImages = (imageArray) => {
    return imageArray.map(image => 
      <div key={image.id}>
        <a href={image.links.html}>
        <img src={image.urls.regular} alt={image.description} title={image.description}></img>
        </a>
      </div>
      )
  }
  const getMorePost = async () => {
    const res = await fetch(
      `https://api.unsplash.com/photos/?client_id=${apiKey}`
    );
    const newPosts = await res.json();
    setPosts((post) => [...post, ...newPosts]);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Infinity Scroll</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 className={styles.title}>Infinity Scroll</h1>
      <InfiniteScroll
      dataLength={posts.length}
      next={getMorePost}
      hasMore={hasMore}
      loader={<h4>Loading...</h4>}
      endMessage={
        <p style={{ textAlign: 'center' }}>
          <b>Yay! You have seen it all</b>
        </p>
      }
      >
        {renderImages(imageArray)}
        {posts.map((post) => (
          <div key={post.id}>
          <a href={post.links.html}>
          <img src={post.urls.regular} alt={post.description} title={post.description}></img>
          </a>
        </div>
        ))}
        </InfiniteScroll>
      
    
       
    </div>
  )
}
const apiKey = "y6oLSCgHLDHZTE714EYXfpvn3xMzb9TwNi8jL2I5qgo";
// const count = 5;
const apiUrl = `https://api.unsplash.com/photos/?client_id=${apiKey}`
// const imageArray = [];

export async function getServerSideProps(context) {
  // console.log(context.req.cookies)
  // const cookies = context.req.cookies
  const res = await fetch(apiUrl)
  const imageArray = await res.json()
  return {
    props: { imageArray},
  }
}


// useEffect(() => {
    
//   window.addEventListener('scroll', () => {
//     if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 1000 && ready) {
//       ready = false;
//       renderImages(imageArray)
//     }
//   });
// })